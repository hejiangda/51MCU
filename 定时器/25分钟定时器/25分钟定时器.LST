C51 COMPILER V9.52.0.0   25__________                                                      02/15/2016 08:46:27 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE 25__________
OBJECT MODULE PLACED IN 25∑÷÷”∂® ±∆˜.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE 25∑÷÷”∂® ±∆˜.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

*** WARNING C500 IN LINE 1 OF 25∑÷÷”∂® ±∆˜.c: LICENSE ERROR (R207(3): REGISTRY READ ERROR)

   1          #include <reg52.h>
   2          sbit KEY1=P3^6;  //ÂÆö‰πâÊåâÈîÆËæìÂÖ•Á´ØÂè£
   3          sbit KEY2=P3^7;  //ÂÆö‰πâÊåâÈîÆËæìÂÖ•Á´ØÂè£
   4          sbit      SPK=P1^2;
   5          unsigned char Timer0_H,Timer0_L,Time;
   6          char happy;
   7          
   8          void DelayUs2x(unsigned char t)
   9          {
  10   1       while(--t);
  11   1      }
  12          
  13          void DelayMs(unsigned int t)
  14          {
  15   1      
  16   1       while(t--)
  17   1       {
  18   2           DelayUs2x(245);
  19   2         DelayUs2x(245);
  20   2       }
  21   1      }
  22          void DelayMin(unsigned int t){
  23   1        while(t--){
  24   2          DelayMs(60000);
  25   2        }
  26   1      }
  27          
  28          void music();
  29          void key();
  30          
  31          void main() {
  32   1        /* code */
  33   1        P0=0x00;
  34   1        P2=0x00;
  35   1         /* while(1){
  36   1          SPK=0;
  37   1           DelayUs2x(100);
  38   1           SPK=1;
  39   1           DelayUs2x(100);
  40   1        }*/
  41   1        
  42   1      
  43   1        key();
  44   1        P0=0xff;
  45   1        P2=0xff;
  46   1      
  47   1      
  48   1        if(happy==0){
  49   2          P0=0xfe;
  50   2          DelayMin(25);
  51   2        }else if (happy==1){
  52   2          P2=0xfe;
  53   2          DelayMin(10);
  54   2        }
C51 COMPILER V9.52.0.0   25__________                                                      02/15/2016 08:46:27 PAGE 2   

  55   1        P0=0xff;
  56   1        P2=0xff;
  57   1        // DelayMin(1);
  58   1        // DelayMs(6000);
  59   1        // music();
  60   1        while(1){
  61   2          SPK=0;
  62   2           DelayUs2x(100);
  63   2           SPK=1;
  64   2           DelayUs2x(100);
  65   2        }
  66   1        
  67   1        // DelayMin(1);
  68   1      }
  69          
  70          
  71          // ------------------------------------------------*/
  72          void delay(unsigned char t)
  73          {
  74   1          unsigned char i;
  75   1        for(i=0;i<t;i++)
  76   1            DelayMs(250);
  77   1          TR0=0;
  78   1       }
  79          /*------------------------------------------------
  80                         ÂÆöÊó∂Âô®0‰∏≠Êñ≠
  81          ------------------------------------------------*/
  82          void TIM0_ISR() interrupt 1
  83          {
  84   1       TR0=0;
  85   1       SPK=!SPK;
  86   1       TH0=Timer0_H;
  87   1       TL0=Timer0_L;
  88   1       TR0=1;
  89   1       }
  90          /*------------------------------------------------
  91                          Ê≠åÊõ≤Â§ÑÁêÜÂáΩÊï∞
  92          ------------------------------------------------*/
  93          void Song()
  94          {
  95   1       TH0=Timer0_H;//ËµãÂÄºÂÆöÊó∂Âô®Êó∂Èó¥ÔºåÂÜ≥ÂÆöÈ¢ëÁéá
  96   1       TL0=Timer0_L;
  97   1       TR0=1;       //ÊâìÂºÄÂÆöÊó∂Âô®
  98   1       delay(Time); //Âª∂Êó∂ÊâÄÈúÄË¶ÅÁöÑËäÇÊãç
  99   1       }
 100          
 101          
 102          void music(){
 103   1      
 104   1      
 105   1        code unsigned char MUSIC[]={          6,2,3,      5,2,1,      3,2,2,    5,2,2,    1,3,2,    6,2,1,    5,
             -2,1,
 106   1                                              6,2,4,      3,2,2,      5,2,1,    6,2,1,    5,2,2,  3,2,2,    1,2,
             -1,
 107   1                                              6,1,1,      5,2,1,      3,2,1,  2,2,4,    2,2,3,  3,2,1,    5,2,2,
 108   1                                              5,2,1,      6,2,1,      3,2,2,  2,2,2,    1,2,4,  5,2,3,    3,2,1,
 109   1                                              2,2,1,      1,2,1,      6,1,1,  1,2,1,    5,1,6,  0,0,0
 110   1                                              };
 111   1                                 // Èü≥Èò∂È¢ëÁéáË°® È´òÂÖ´‰Ωç
 112   1        code unsigned char FREQH[]={
 113   1                                        0xF2,0xF3,0xF5,0xF5,0xF6,0xF7,0xF8,
 114   1                                        0xF9,0xF9,0xFA,0xFA,0xFB,0xFB,0xFC,0xFC, //1,2,3,4,5,6,7,8,i
C51 COMPILER V9.52.0.0   25__________                                                      02/15/2016 08:46:27 PAGE 3   

 115   1                                        0xFC,0xFD,0xFD,0xFD,0xFD,0xFE,
 116   1                                        0xFE,0xFE,0xFE,0xFE,0xFE,0xFE,0xFF,
 117   1                                       } ;
 118   1                                 // Èü≥Èò∂È¢ëÁéáË°® ‰ΩéÂÖ´‰Ωç
 119   1        code unsigned char FREQL[]={
 120   1                                         0x42,0xC1,0x17,0xB6,0xD0,0xD1,0xB6,
 121   1                                         0x21,0xE1,0x8C,0xD8,0x68,0xE9,0x5B,0x8F, //1,2,3,4,5,6,7,8,i
 122   1                                         0xEE,0x44, 0x6B,0xB4,0xF4,0x2D,
 123   1                                         0x47,0x77,0xA2,0xB6,0xDA,0xFA,0x16,
 124   1                                        };
 125   1        /*---------------------------*/
 126   1         {
 127   2      
 128   2         unsigned char k,i;
 129   2         TMOD|=0x01; //ÁΩÆÂÆöÊó∂Âô®0Â∑•‰ΩúÊñπÂºè1
 130   2         EA=1;       //ÊâìÂºÄÂÖ®Â±Ä‰∏≠Êñ≠
 131   2         ET0=1;      //ÊâìÂºÄÂÆöÊó∂0‰∏≠Êñ≠
 132   2         while(1)
 133   2              {
 134   3                if(happy==0){
 135   4                  P0=0xaa;
 136   4                }else if(happy==1){
 137   4                  P2=0xd7;
 138   4                }
 139   3               i=0;
 140   3               while(i<100)
 141   3                  {         //Èü≥‰πêÊï∞ÁªÑÈïøÂ∫¶ ÔºåÂî±ÂÆå‰ªéÂ§¥ÂÜçÊù•
 142   4                    k=MUSIC[i]+7*MUSIC[i+1]-1;//ÂéªÈü≥Á¨¶ÊåØËç°È¢ëÁéáÊâÄÈúÄÊï∞ÊçÆ
 143   4                    Timer0_H=FREQH[k];
 144   4                    Timer0_L=FREQL[k];
 145   4                    Time=MUSIC[i+2];          //ËäÇÊãçÊó∂Èïø
 146   4                    i=i+3;
 147   4                    Song();
 148   4                    // P0=0xff;
 149   4                   }
 150   3               }
 151   2          }
 152   1      }
 153          
 154          void key ()
 155          {
 156   1      
 157   1        KEY1=1;
 158   1        KEY2=1;
 159   1      
 160   1        while (1)         //‰∏ªÂæ™ÁéØ
 161   1          {
 162   2            if(!KEY1)  //Â¶ÇÊûúÊ£ÄÊµãÂà∞‰ΩéÁîµÂπ≥ÔºåËØ¥ÊòéÊåâÈîÆÊåâ‰∏ã
 163   2              {
 164   3             DelayMs(10); //Âª∂Êó∂ÂéªÊäñÔºå‰∏ÄËà¨10-20ms
 165   3               if(!KEY1)     //ÂÜçÊ¨°Á°ÆËÆ§ÊåâÈîÆÊòØÂê¶Êåâ‰∏ãÔºåÊ≤°ÊúâÊåâ‰∏ãÂàôÈÄÄÂá∫
 166   3               {
 167   4                  while(!KEY1);//Â¶ÇÊûúÁ°ÆËÆ§Êåâ‰∏ãÊåâÈîÆÁ≠âÂæÖÊåâÈîÆÈáäÊîæÔºåÊ≤°ÊúâÈáäÊîæÂàô‰∏ÄÁõ¥Á≠âÂæÖ
 168   4                   {
 169   5                  //  LED=!LED;//ÈáäÊîæÂàôÊâßË°åÈúÄË¶ÅÁöÑÁ®ãÂ∫è
 170   5                  happy=0;
 171   5                  goto a;
 172   5                }}}
 173   2      
 174   2          if(!KEY2)  //Â¶ÇÊûúÊ£ÄÊµãÂà∞‰ΩéÁîµÂπ≥ÔºåËØ¥ÊòéÊåâÈîÆÊåâ‰∏ã
 175   2            {
 176   3           DelayMs(10); //Âª∂Êó∂ÂéªÊäñÔºå‰∏ÄËà¨10-20ms
C51 COMPILER V9.52.0.0   25__________                                                      02/15/2016 08:46:27 PAGE 4   

 177   3             if(!KEY2)     //ÂÜçÊ¨°Á°ÆËÆ§ÊåâÈîÆÊòØÂê¶Êåâ‰∏ãÔºåÊ≤°ÊúâÊåâ‰∏ãÂàôÈÄÄÂá∫
 178   3             {
 179   4                while(!KEY2);//Â¶ÇÊûúÁ°ÆËÆ§Êåâ‰∏ãÊåâÈîÆÁ≠âÂæÖÊåâÈîÆÈáäÊîæÔºåÊ≤°ÊúâÈáäÊîæÂàô‰∏ÄÁõ¥Á≠âÂæÖ
 180   4                 {
 181   5                //  LED=!LED;//ÈáäÊîæÂàôÊâßË°åÈúÄË¶ÅÁöÑÁ®ãÂ∫è
 182   5                happy=1;
 183   5                goto a;
 184   5              }
 185   4            }
 186   3          }
 187   2        }
 188   1      
 189   1      a:;
 190   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    297    ----
   CONSTANT SIZE    =    158    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
